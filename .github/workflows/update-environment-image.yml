name: Promote DEV Docker image to PROD

on:
  workflow_dispatch:
    inputs:
      sourceEnv:
        description: "Source environment"
        required: true
        default: "dev"
        type: choice
        options:
          - dev
      targetEnv:
        description: "Target environment to update"
        required: true
        default: "prod"
        type: choice
        options:
          - prod

jobs:
  update-image:
    name: "Update Docker image"
    runs-on: ubuntu-latest
    environment: ${{ inputs.sourceEnv }}
    steps:
      - name: Create App Token for GitHub App
        uses: actions/create-github-app-token@v2
        id: app-token
        with:
          # In order to support running this workflow manually and still enforce rulesets, we need to run the git commands
          # to update taskdefs as the GitHub App which is configured to bypass the rulesets.
          # The "Update Image" GitHub App must be installed on the TheCloudMasters org and have permissions to write to the
          # TheCloudMasters/uesio-infra repo.
          app-id: ${{ vars.UPDATE_IMAGE_APP_ID }}
          private-key: ${{ secrets.UPDATE_IMAGE_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0
      - name: Update Docker image
        env:
          sourceEnv: ${{ inputs.sourceEnv }}
          targetEnv: ${{ inputs.targetEnv }}
          gitUsername: ${{ github.actor }}
          gitEmail: "${{ github.event.sender.id }}+${{ github.event.sender.login }}@users.noreply.github.com"
        run: bash scripts/update-env-image.sh
  deploy:
    name: Deploy to AWS - ${{ inputs.targetEnv }}
    needs: update-image
    uses: ./.github/workflows/deploy-aws.yml
    with:
      environment: ${{ inputs.targetEnv }}
      target_ref: ${{ needs.update-image.outputs.commit_sha }}
    secrets: inherit
