name: Deploy to AWS

on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      ECS_CLUSTER:
        required: true
      ECS_SERVICE:
        required: true

jobs:
  deploy:
    name: Deploy to AWS - ${{ inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      taskDefinitionFile: ./aws/${{ inputs.environment }}/ecs/task_definitions/uesio_web.json
      appSpecFile: ./aws/${{ inputs.environment }}/ecs/task_definitions/appspec.yaml
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
        with:
          codedeploy-appspec: ${{ env.appSpecFile }}
          codedeploy-application: tcm-uesio-${{ inputs.environment }}-uesio-${{ inputs.environment }}
          codedeploy-deployment-group: tcm-uesio-${{ inputs.environment }}-uesio-${{ inputs.environment }}
          wait-for-minutes: 5
          task-definition: ${{ env.taskDefinitionFile }}
          service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
